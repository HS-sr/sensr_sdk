// source: sensr_proto/type.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var sensr_proto_global_type_pb = require('../sensr_proto/global_type_pb.js');
goog.object.extend(proto, sensr_proto_global_type_pb);
goog.exportSymbol('proto.sensr_proto.BoundingBox', null, global);
goog.exportSymbol('proto.sensr_proto.LabelType', null, global);
goog.exportSymbol('proto.sensr_proto.PolygonBox', null, global);
goog.exportSymbol('proto.sensr_proto.ZoneEventType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensr_proto.BoundingBox = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensr_proto.BoundingBox, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensr_proto.BoundingBox.displayName = 'proto.sensr_proto.BoundingBox';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensr_proto.PolygonBox = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sensr_proto.PolygonBox.repeatedFields_, null);
};
goog.inherits(proto.sensr_proto.PolygonBox, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensr_proto.PolygonBox.displayName = 'proto.sensr_proto.PolygonBox';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensr_proto.BoundingBox.prototype.toObject = function(opt_includeInstance) {
  return proto.sensr_proto.BoundingBox.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensr_proto.BoundingBox} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensr_proto.BoundingBox.toObject = function(includeInstance, msg) {
  var f, obj = {
    position: (f = msg.getPosition()) && sensr_proto_global_type_pb.Vector3.toObject(includeInstance, f),
    size: (f = msg.getSize()) && sensr_proto_global_type_pb.Vector3.toObject(includeInstance, f),
    yaw: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensr_proto.BoundingBox}
 */
proto.sensr_proto.BoundingBox.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensr_proto.BoundingBox;
  return proto.sensr_proto.BoundingBox.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensr_proto.BoundingBox} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensr_proto.BoundingBox}
 */
proto.sensr_proto.BoundingBox.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new sensr_proto_global_type_pb.Vector3;
      reader.readMessage(value,sensr_proto_global_type_pb.Vector3.deserializeBinaryFromReader);
      msg.setPosition(value);
      break;
    case 2:
      var value = new sensr_proto_global_type_pb.Vector3;
      reader.readMessage(value,sensr_proto_global_type_pb.Vector3.deserializeBinaryFromReader);
      msg.setSize(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setYaw(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensr_proto.BoundingBox.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensr_proto.BoundingBox.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensr_proto.BoundingBox} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensr_proto.BoundingBox.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPosition();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      sensr_proto_global_type_pb.Vector3.serializeBinaryToWriter
    );
  }
  f = message.getSize();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      sensr_proto_global_type_pb.Vector3.serializeBinaryToWriter
    );
  }
  f = message.getYaw();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
};


/**
 * optional Vector3 position = 1;
 * @return {?proto.Vector3}
 */
proto.sensr_proto.BoundingBox.prototype.getPosition = function() {
  return /** @type{?proto.Vector3} */ (
    jspb.Message.getWrapperField(this, sensr_proto_global_type_pb.Vector3, 1));
};


/**
 * @param {?proto.Vector3|undefined} value
 * @return {!proto.sensr_proto.BoundingBox} returns this
*/
proto.sensr_proto.BoundingBox.prototype.setPosition = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensr_proto.BoundingBox} returns this
 */
proto.sensr_proto.BoundingBox.prototype.clearPosition = function() {
  return this.setPosition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensr_proto.BoundingBox.prototype.hasPosition = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Vector3 size = 2;
 * @return {?proto.Vector3}
 */
proto.sensr_proto.BoundingBox.prototype.getSize = function() {
  return /** @type{?proto.Vector3} */ (
    jspb.Message.getWrapperField(this, sensr_proto_global_type_pb.Vector3, 2));
};


/**
 * @param {?proto.Vector3|undefined} value
 * @return {!proto.sensr_proto.BoundingBox} returns this
*/
proto.sensr_proto.BoundingBox.prototype.setSize = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensr_proto.BoundingBox} returns this
 */
proto.sensr_proto.BoundingBox.prototype.clearSize = function() {
  return this.setSize(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensr_proto.BoundingBox.prototype.hasSize = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional float yaw = 3;
 * @return {number}
 */
proto.sensr_proto.BoundingBox.prototype.getYaw = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.sensr_proto.BoundingBox} returns this
 */
proto.sensr_proto.BoundingBox.prototype.setYaw = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sensr_proto.PolygonBox.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensr_proto.PolygonBox.prototype.toObject = function(opt_includeInstance) {
  return proto.sensr_proto.PolygonBox.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensr_proto.PolygonBox} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensr_proto.PolygonBox.toObject = function(includeInstance, msg) {
  var f, obj = {
    pointsList: jspb.Message.toObjectList(msg.getPointsList(),
    sensr_proto_global_type_pb.Vector2.toObject, includeInstance),
    minZ: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    maxZ: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensr_proto.PolygonBox}
 */
proto.sensr_proto.PolygonBox.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensr_proto.PolygonBox;
  return proto.sensr_proto.PolygonBox.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensr_proto.PolygonBox} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensr_proto.PolygonBox}
 */
proto.sensr_proto.PolygonBox.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new sensr_proto_global_type_pb.Vector2;
      reader.readMessage(value,sensr_proto_global_type_pb.Vector2.deserializeBinaryFromReader);
      msg.addPoints(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMinZ(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMaxZ(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensr_proto.PolygonBox.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensr_proto.PolygonBox.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensr_proto.PolygonBox} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensr_proto.PolygonBox.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPointsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      sensr_proto_global_type_pb.Vector2.serializeBinaryToWriter
    );
  }
  f = message.getMinZ();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getMaxZ();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
};


/**
 * repeated Vector2 points = 1;
 * @return {!Array<!proto.Vector2>}
 */
proto.sensr_proto.PolygonBox.prototype.getPointsList = function() {
  return /** @type{!Array<!proto.Vector2>} */ (
    jspb.Message.getRepeatedWrapperField(this, sensr_proto_global_type_pb.Vector2, 1));
};


/**
 * @param {!Array<!proto.Vector2>} value
 * @return {!proto.sensr_proto.PolygonBox} returns this
*/
proto.sensr_proto.PolygonBox.prototype.setPointsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.Vector2=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Vector2}
 */
proto.sensr_proto.PolygonBox.prototype.addPoints = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Vector2, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sensr_proto.PolygonBox} returns this
 */
proto.sensr_proto.PolygonBox.prototype.clearPointsList = function() {
  return this.setPointsList([]);
};


/**
 * optional float min_z = 2;
 * @return {number}
 */
proto.sensr_proto.PolygonBox.prototype.getMinZ = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.sensr_proto.PolygonBox} returns this
 */
proto.sensr_proto.PolygonBox.prototype.setMinZ = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional float max_z = 3;
 * @return {number}
 */
proto.sensr_proto.PolygonBox.prototype.getMaxZ = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.sensr_proto.PolygonBox} returns this
 */
proto.sensr_proto.PolygonBox.prototype.setMaxZ = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * @enum {number}
 */
proto.sensr_proto.LabelType = {
  LABEL_CAR: 0,
  LABEL_PEDESTRIAN: 1,
  LABEL_CYCLIST: 2,
  LABEL_MISC: 3,
  LABEL_GROUND: 4,
  LABEL_MAX: 5
};

/**
 * @enum {number}
 */
proto.sensr_proto.ZoneEventType = {
  ZONE_EVENT_NONE: 0,
  ZONE_EVENT_ENTRY: 1,
  ZONE_EVENT_EXIT: 2,
  ZONE_EVENT_LOITERING: 3,
  ZONE_EVENT_VELOCITY: 4
};

goog.object.extend(exports, proto.sensr_proto);
