// source: sensr_proto/output.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var google_api_annotations_pb = require('../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var argos_proto_type_pb = require('../argos_proto/type_pb.js');
goog.object.extend(proto, argos_proto_type_pb);
goog.exportSymbol('proto.sensr_proto.OuputRequest', null, global);
goog.exportSymbol('proto.sensr_proto.OutputMessage', null, global);
goog.exportSymbol('proto.sensr_proto.TestCommand', null, global);
goog.exportSymbol('proto.sensr_proto.TestReply', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensr_proto.OuputRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensr_proto.OuputRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensr_proto.OuputRequest.displayName = 'proto.sensr_proto.OuputRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensr_proto.TestCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensr_proto.TestCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensr_proto.TestCommand.displayName = 'proto.sensr_proto.TestCommand';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensr_proto.TestReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensr_proto.TestReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensr_proto.TestReply.displayName = 'proto.sensr_proto.TestReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensr_proto.OutputMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sensr_proto.OutputMessage.repeatedFields_, null);
};
goog.inherits(proto.sensr_proto.OutputMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensr_proto.OutputMessage.displayName = 'proto.sensr_proto.OutputMessage';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensr_proto.OuputRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sensr_proto.OuputRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensr_proto.OuputRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensr_proto.OuputRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensr_proto.OuputRequest}
 */
proto.sensr_proto.OuputRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensr_proto.OuputRequest;
  return proto.sensr_proto.OuputRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensr_proto.OuputRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensr_proto.OuputRequest}
 */
proto.sensr_proto.OuputRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensr_proto.OuputRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensr_proto.OuputRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensr_proto.OuputRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensr_proto.OuputRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.sensr_proto.OuputRequest.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sensr_proto.OuputRequest} returns this
 */
proto.sensr_proto.OuputRequest.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensr_proto.TestCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.sensr_proto.TestCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensr_proto.TestCommand} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensr_proto.TestCommand.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensr_proto.TestCommand}
 */
proto.sensr_proto.TestCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensr_proto.TestCommand;
  return proto.sensr_proto.TestCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensr_proto.TestCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensr_proto.TestCommand}
 */
proto.sensr_proto.TestCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensr_proto.TestCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensr_proto.TestCommand.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensr_proto.TestCommand} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensr_proto.TestCommand.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.sensr_proto.TestCommand.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sensr_proto.TestCommand} returns this
 */
proto.sensr_proto.TestCommand.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensr_proto.TestReply.prototype.toObject = function(opt_includeInstance) {
  return proto.sensr_proto.TestReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensr_proto.TestReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensr_proto.TestReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensr_proto.TestReply}
 */
proto.sensr_proto.TestReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensr_proto.TestReply;
  return proto.sensr_proto.TestReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensr_proto.TestReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensr_proto.TestReply}
 */
proto.sensr_proto.TestReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensr_proto.TestReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensr_proto.TestReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensr_proto.TestReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensr_proto.TestReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.sensr_proto.TestReply.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sensr_proto.TestReply} returns this
 */
proto.sensr_proto.TestReply.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sensr_proto.OutputMessage.repeatedFields_ = [2,101];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensr_proto.OutputMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.sensr_proto.OutputMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensr_proto.OutputMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensr_proto.OutputMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    timeStamp: (f = msg.getTimeStamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    objectsList: jspb.Message.toObjectList(msg.getObjectsList(),
    argos_proto_type_pb.Object.toObject, includeInstance),
    regionOfInterestList: jspb.Message.toObjectList(msg.getRegionOfInterestList(),
    argos_proto_type_pb.Zone.toObject, includeInstance),
    groundPoints: msg.getGroundPoints_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensr_proto.OutputMessage}
 */
proto.sensr_proto.OutputMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensr_proto.OutputMessage;
  return proto.sensr_proto.OutputMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensr_proto.OutputMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensr_proto.OutputMessage}
 */
proto.sensr_proto.OutputMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimeStamp(value);
      break;
    case 2:
      var value = new argos_proto_type_pb.Object;
      reader.readMessage(value,argos_proto_type_pb.Object.deserializeBinaryFromReader);
      msg.addObjects(value);
      break;
    case 101:
      var value = new argos_proto_type_pb.Zone;
      reader.readMessage(value,argos_proto_type_pb.Zone.deserializeBinaryFromReader);
      msg.addRegionOfInterest(value);
      break;
    case 102:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setGroundPoints(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensr_proto.OutputMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensr_proto.OutputMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensr_proto.OutputMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensr_proto.OutputMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimeStamp();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getObjectsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      argos_proto_type_pb.Object.serializeBinaryToWriter
    );
  }
  f = message.getRegionOfInterestList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      101,
      f,
      argos_proto_type_pb.Zone.serializeBinaryToWriter
    );
  }
  f = message.getGroundPoints_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      102,
      f
    );
  }
};


/**
 * optional google.protobuf.Timestamp time_stamp = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.sensr_proto.OutputMessage.prototype.getTimeStamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.sensr_proto.OutputMessage} returns this
*/
proto.sensr_proto.OutputMessage.prototype.setTimeStamp = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensr_proto.OutputMessage} returns this
 */
proto.sensr_proto.OutputMessage.prototype.clearTimeStamp = function() {
  return this.setTimeStamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensr_proto.OutputMessage.prototype.hasTimeStamp = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated argos_proto.Object objects = 2;
 * @return {!Array<!proto.argos_proto.Object>}
 */
proto.sensr_proto.OutputMessage.prototype.getObjectsList = function() {
  return /** @type{!Array<!proto.argos_proto.Object>} */ (
    jspb.Message.getRepeatedWrapperField(this, argos_proto_type_pb.Object, 2));
};


/**
 * @param {!Array<!proto.argos_proto.Object>} value
 * @return {!proto.sensr_proto.OutputMessage} returns this
*/
proto.sensr_proto.OutputMessage.prototype.setObjectsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.argos_proto.Object=} opt_value
 * @param {number=} opt_index
 * @return {!proto.argos_proto.Object}
 */
proto.sensr_proto.OutputMessage.prototype.addObjects = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.argos_proto.Object, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sensr_proto.OutputMessage} returns this
 */
proto.sensr_proto.OutputMessage.prototype.clearObjectsList = function() {
  return this.setObjectsList([]);
};


/**
 * repeated argos_proto.Zone region_of_interest = 101;
 * @return {!Array<!proto.argos_proto.Zone>}
 */
proto.sensr_proto.OutputMessage.prototype.getRegionOfInterestList = function() {
  return /** @type{!Array<!proto.argos_proto.Zone>} */ (
    jspb.Message.getRepeatedWrapperField(this, argos_proto_type_pb.Zone, 101));
};


/**
 * @param {!Array<!proto.argos_proto.Zone>} value
 * @return {!proto.sensr_proto.OutputMessage} returns this
*/
proto.sensr_proto.OutputMessage.prototype.setRegionOfInterestList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 101, value);
};


/**
 * @param {!proto.argos_proto.Zone=} opt_value
 * @param {number=} opt_index
 * @return {!proto.argos_proto.Zone}
 */
proto.sensr_proto.OutputMessage.prototype.addRegionOfInterest = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 101, opt_value, proto.argos_proto.Zone, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sensr_proto.OutputMessage} returns this
 */
proto.sensr_proto.OutputMessage.prototype.clearRegionOfInterestList = function() {
  return this.setRegionOfInterestList([]);
};


/**
 * optional bytes ground_points = 102;
 * @return {!(string|Uint8Array)}
 */
proto.sensr_proto.OutputMessage.prototype.getGroundPoints = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 102, ""));
};


/**
 * optional bytes ground_points = 102;
 * This is a type-conversion wrapper around `getGroundPoints()`
 * @return {string}
 */
proto.sensr_proto.OutputMessage.prototype.getGroundPoints_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getGroundPoints()));
};


/**
 * optional bytes ground_points = 102;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getGroundPoints()`
 * @return {!Uint8Array}
 */
proto.sensr_proto.OutputMessage.prototype.getGroundPoints_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getGroundPoints()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sensr_proto.OutputMessage} returns this
 */
proto.sensr_proto.OutputMessage.prototype.setGroundPoints = function(value) {
  return jspb.Message.setProto3BytesField(this, 102, value);
};


goog.object.extend(exports, proto.sensr_proto);
